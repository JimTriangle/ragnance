name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- FRONT ----------
      - name: Setup Node.js (frontend)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install & Build (frontend)
        working-directory: ./client
        run: |
          npm ci || npm install
          npm run build
        env:
          # REACT_APP_API_URL: https://ragnance.fr/api   # si besoin
          CI: true

      # ---------- PREP CÔTÉ SERVEUR ----------
      - name: Prepare deploy dir permissions (SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e
            sudo mkdir -p /var/www/ragnance /var/www/ragnance/server/var/data
            sudo chown -R $USER:$USER /var/www/ragnance

      # Nettoie le contenu du dossier front (pas le dossier lui-même)
      - name: Clean frontend dir on server (SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e
            sudo find /var/www/ragnance -mindepth 1 -maxdepth 1 -exec rm -rf {} +
            sudo chown -R $USER:$USER /var/www/ragnance

      # ---------- SCP FRONT ----------
      - name: Upload frontend build to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "client/build/**"
          target: "/var/www/ragnance"
          strip_components: 2

      # On n’upload pas la DB: retire server/var côté runner
      - name: Remove local server/var before upload (keeps DB on VPS)
        run: rm -rf server/var

      # Nettoie le dossier serveur (garde /var) et remet les droits
      - name: Clean server dir on server (SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e
            sudo mkdir -p /var/www/ragnance/server/var/data
            sudo find /var/www/ragnance/server -mindepth 1 -maxdepth 1 ! -name 'var' -exec rm -rf {} +
            sudo chown -R $USER:$USER /var/www/ragnance/server

      # ---------- SCP SERVER ----------
      - name: Upload server code to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "server/**"
          target: "/var/www/ragnance/server"
          strip_components: 1

      # ---------- POST-DEPLOY ----------
      - name: Post-deploy on VPS (install deps + pm2 + nginx reload)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e
            # Node/pm2 même si nvm est utilisé
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm i -g pm2
            fi

            cd /var/www/ragnance/server
            npm ci --omit=dev || npm install --omit=dev

            # Restart propre: met à jour les variables d'env au redémarrage
            if pm2 describe ragnance-api >/dev/null 2>&1; then
              pm2 restart ragnance-api --update-env
            else
              PORT=3000 pm2 start server.js --name ragnance-api
            fi
            pm2 save

            sudo nginx -t && sudo systemctl reload nginx
