name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      FRONT_BUILD_DIR: client/dist   # CRA: client/build  |  Vite: client/dist

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # ===== Build FRONT =====
      - name: Install & build frontend
        working-directory: ./client
        run: |
          npm ci
          npm run build
        env:
          # si tu as des variables pour le build front, ajoute-les ici
          # VITE_API_URL: https://ragnance.fr/api
          CI: true

      # ===== Upload FRONT (statique) =====
      - name: Upload frontend build to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }} # retire si ta clé n'a pas de passphrase
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "${{ env.FRONT_BUILD_DIR }}/*"
          target: "/var/www/ragnance"
          strip_components: 2   # enlève "client/dist" -> dépose directement les fichiers
          rm: true              # nettoie les anciens fichiers (évite les restes)

      # ===== Upload SERVER (code) =====
      - name: Upload server code to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: |
            server/**
            !server/node_modules/**
            !server/.env
          target: "/var/www/ragnance"
          strip_components: 0

      # ===== Post-deploy (serveur) =====
      - name: Execute deployment script on VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e

            # Assure l'environnement Node/pm2 (cas nvm & cas Node system)
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm i -g pm2
            fi

            # Dossiers
            sudo mkdir -p /var/www/ragnance /var/www/ragnance/server /var/www/ragnance/database
            sudo chown -R $USER:$USER /var/www/ragnance

            # Install deps serveur si package-lock a changé (safe de refaire npm ci)
            cd /var/www/ragnance/server
            [ -f package.json ] && npm ci --omit=dev || true

            # (Re)démarre l'API
            if [ -f ecosystem.config.js ]; then
              pm2 startOrRestart ecosystem.config.js
            else
              pm2 restart ragnance-api || pm2 start server.js --name ragnance-api
            fi
            pm2 save

            # Nginx reload (au cas où le front a changé)
            sudo nginx -t && sudo systemctl reload nginx
